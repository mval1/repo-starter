name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  ARTIFACT_DIR: ./artifacts

permissions:
  contents: write
  pull-requests: write
  checks: write
  actions: write
  statuses: write
  pages: write

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - name: Run Commit Watch
        env:
          COMMIT_WATCH_OUTPUT_DIR: ${{ env.ARTIFACT_DIR }}/
          COMMITWATCH_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_REPO_OWNER: ${{ github.repository_owner }}
          CI_REPO_NAME: ${{ github.event.repository.name }}
          CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          CI_BASE_BRANCH: origin/${{ github.base_ref }}
        run: yarn dlx commit-watch
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: commit-watch-artifacts
          path: ${{ env.ARTIFACT_DIR }}

  publish_preview:
    name: Publish Preview
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install WASM Target
        run: rustup target add wasm32-wasip1
        shell: bash
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './packages/charm-swc/ -> target'

      - name: Build
        run: yarn build
        shell: bash

      - name: Preview
        uses: ./.github/actions/releaser-preview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          releaser-command: yarn releaser

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ${{ env.ARTIFACT_DIR }}
